apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion gradle_build_versions.compileSdkVersion

    defaultConfig {
        applicationId "com.example.providermoduledemo"
        minSdkVersion gradle_build_versions.minSdkVersion
        targetSdkVersion gradle_build_versions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        // Enabling multidex support.
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir {
            dirs '../provider_viewmodel/libs'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'

    //OkHttp 库
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    api(name: 'BaseRecyclerViewAdapterHelper-2.9.30', ext: 'aar')
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
    //glide 库
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    //下拉刷新库，后续会更换成 QQ Reader 的刷新库
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"


    if (!isSourceBuildDataProviderComponent.toBoolean()) {
        implementation project(':provider_viewmodel')
        implementation project(':provider_core')
        implementation project(':provider_build')
        //Provider Generator 注解
        implementation project(':lib_provider_build_base')
        //需要注意需要添加注解处理器！！
        kapt project(':lib_provider_build_compiler')
    }
}

task uniteTask {
    doFirst {
        println "uniteTask 执行"
    }

}



task uploadTestTask1 {
    doLast {
        println "uploadTestTask1"
    }
}
task uploadTestTask2 {
    doLast {
        println "uploadTestTask2"
    }
}

uniteTask.dependsOn app:uploadTestTask1
uniteTask.dependsOn app:uploadTestTask2
