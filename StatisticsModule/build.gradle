//apply plugin: 'com.android.library'
if (isStatisticsModuleDebug.toBoolean()) {
    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
} else {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
}


def config = rootProject.ext.android
def libraries = rootProject.ext.dependencies

android {
    // 编译SDK的版本
    compileSdkVersion config.compileSdkVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        //minSDk
        minSdkVersion config.minSdkVersion
        //targetSdk
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Route注解生成代码需要
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [ moduleName : project.getName() ]
//            }
//        }
    }
    buildTypes {
        release {
            // minifyEnabled true
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }
        release_with_sign {
            // minifyEnabled true
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            jniLibs.srcDirs = ['libs']
//            java.srcDirs = ['src/main/java']
//            resources.srcDirs = ['src/main/java']
//            aidl.srcDirs = ['src/main/java']
//            renderscript.srcDirs = ['src/main/java']
//            res.srcDirs = ['src/main/res']
////            assets.srcDirs = ['assets']
        }
        //main.resources.srcDirs = ['src/resources']

        cofree {
            manifest.srcFile 'src/cooperate/cofree/AndroidManifest.xml'
            java.srcDirs = ['src/cooperate/cofree/src']
            jniLibs.srcDirs = ['src/cooperate/cofree/libs']
        }

//        instrumentTest.setRoot('tests')
        // moduleDebug时编译为APP 使用build-types/编译
        if (isStatisticsModuleDebug.toBoolean()) {
            debug.setRoot('build-types/debug')
            release.setRoot('build-types/debug')
        } else {
        }
    }

    // holy shit  http://stackoverflow.com/questions/24860659/multi-flavor-app-based-on-multi-flavor-library-in-android-gradle
    publishNonDefault true
    flavorDimensions "normal"
    productFlavors{
        cofree {
            dimension 'normal'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(include: ['*.so','*.jar'], dir: 'libs')

    FileTree cofreeTree = fileTree(dir: 'src/cooperate/cofree/libs', includes: ['*.so', '*.jar'])
    cofreeApi cofreeTree

//    FileTree oppoTree = fileTree(dir: 'src/cooperate/oppo/libs', includes: ['*.so', '*.jar'])
//    oppoApi oppoTree

//    FileTree vivoTree = fileTree(dir: 'src/cooperate/vivo/libs', includes: ['*.so', '*.jar'])
//    vivoApi vivoTree

//    FileTree huaweiTree = fileTree(dir: 'src/cooperate/huawei/libs', includes: ['*.so', '*.jar'])
//    huaweiApi huaweiTree

//    FileTree commonTree = fileTree(dir: 'src/cooperate/common/libs', includes: ['*.so', '*.jar'])
//    commonApi commonTree

//    FileTree samsungTree = fileTree(dir: 'src/cooperate/samsung/libs', includes: ['*.so', '*.jar'])
//    samsungApi samsungTree
    //注解处理器
//    annotationProcessor libraries.arouterCompiler

    //    implementation project(':CoreModule')
    implementation libraries.yuewenCoreModule
    //    implementation project(':CommonModule')
    implementation libraries.yuewenCommonModule
    //Route
//    api project( ':RouteModule')

    api(name: 'beacon-android-release-3.2.1.14-official', ext: 'aar')
}


//task copyFileFormJar(type: Copy) {
//    delete 'assets/beaconcomp'
//    from zipTree('libs/beacon-android-release-3.2.0.4-qqreader-official.jar/')
//    include 'assets/beaconcomp/**'
//    into 'src/main'
//}
//
//preBuild.dependsOn copyFileFormJar